# Generated by Django 5.1.2 on 2024-12-03 14:28

import django.db.models.deletion
import services.utils
import tinymce.models
import utils.validations
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Полное имя')),
                ('phone_number', models.CharField(max_length=14, validators=[utils.validations.phone_number_validation], verbose_name='номер телефона')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='электронная почта')),
                ('message', models.TextField(blank=True, null=True, verbose_name='сообщение')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='решено')),
            ],
            options={
                'verbose_name': 'Запрос',
                'verbose_name_plural': 'Запросы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='AppealStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('incoming_appeals', models.PositiveIntegerField(default=0, verbose_name='полученные обращения')),
                ('resolved_appeals', models.PositiveIntegerField(default=0, verbose_name='решенные обращения')),
                ('explained_appeals', models.PositiveIntegerField(default=0, verbose_name='объясненные обрашения')),
                ('rejected_appeals', models.PositiveIntegerField(default=0, verbose_name='отклоненные обрашения')),
            ],
            options={
                'verbose_name': 'Статистика обрашения',
                'verbose_name_plural': 'Статистики обрашений',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CommissionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, verbose_name='назавние')),
                ('name_uz', models.CharField(max_length=250, null=True, verbose_name='назавние')),
                ('name_ru', models.CharField(max_length=250, null=True, verbose_name='назавние')),
                ('name_en', models.CharField(max_length=250, null=True, verbose_name='назавние')),
                ('description', models.TextField(verbose_name='описание')),
                ('description_uz', models.TextField(null=True, verbose_name='описание')),
                ('description_ru', models.TextField(null=True, verbose_name='описание')),
                ('description_en', models.TextField(null=True, verbose_name='описание')),
                ('icon', models.ImageField(upload_to='commission/category/', verbose_name='иконка')),
            ],
            options={
                'verbose_name': 'Категория комиссии',
                'verbose_name_plural': 'Категория комиссий',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100, verbose_name='полное имя')),
                ('full_name_uz', models.CharField(max_length=100, null=True, verbose_name='полное имя')),
                ('full_name_ru', models.CharField(max_length=100, null=True, verbose_name='полное имя')),
                ('full_name_en', models.CharField(max_length=100, null=True, verbose_name='полное имя')),
                ('description', models.CharField(max_length=300, verbose_name='описание')),
                ('description_uz', models.CharField(max_length=300, null=True, verbose_name='описание')),
                ('description_ru', models.CharField(max_length=300, null=True, verbose_name='описание')),
                ('description_en', models.CharField(max_length=300, null=True, verbose_name='описание')),
                ('phone_number', models.CharField(max_length=15, verbose_name='номер телефона')),
                ('position', models.CharField(max_length=150, verbose_name='позиция')),
                ('position_uz', models.CharField(max_length=150, null=True, verbose_name='позиция')),
                ('position_ru', models.CharField(max_length=150, null=True, verbose_name='позиция')),
                ('position_en', models.CharField(max_length=150, null=True, verbose_name='позиция')),
                ('twitter_url', models.URLField(default='twitter.com', verbose_name='твиттер_url')),
                ('instagram_url', models.URLField(default='instagram.com', verbose_name='инстаграм_url')),
                ('facebook_url', models.URLField(default='facebook.com', verbose_name='фейсбук_url')),
                ('order', models.PositiveIntegerField(default=1)),
                ('image', models.ImageField(upload_to='managements/')),
            ],
            options={
                'verbose_name': 'Управление',
                'verbose_name_plural': 'Управлении',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='MandatCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, verbose_name='Назавние')),
                ('name_uz', models.CharField(max_length=250, null=True, verbose_name='Назавние')),
                ('name_ru', models.CharField(max_length=250, null=True, verbose_name='Назавние')),
                ('name_en', models.CharField(max_length=250, null=True, verbose_name='Назавние')),
            ],
            options={
                'verbose_name': 'Категория мандата',
                'verbose_name_plural': 'Категория мандатов',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='NormativeDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='название')),
                ('name_uz', models.CharField(max_length=200, null=True, verbose_name='название')),
                ('name_ru', models.CharField(max_length=200, null=True, verbose_name='название')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='название')),
                ('file', models.FileField(upload_to='normative/', validators=[services.utils.validate_file_type_and_size], verbose_name='файл')),
                ('doc_type', models.CharField(choices=[('PDF', 'PDF'), ('DOCX', 'Word'), ('XLS', 'Excel')], editable=False, max_length=5, verbose_name='тип документа')),
            ],
            options={
                'verbose_name': 'нормативный документ',
                'verbose_name_plural': 'нормативные документы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=225, verbose_name='название')),
                ('name_uz', models.CharField(max_length=225, null=True, verbose_name='название')),
                ('name_ru', models.CharField(max_length=225, null=True, verbose_name='название')),
                ('name_en', models.CharField(max_length=225, null=True, verbose_name='название')),
            ],
            options={
                'verbose_name': 'Категория постов',
                'verbose_name_plural': 'Категории постов',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='навзание')),
                ('name_uz', models.CharField(max_length=100, null=True, verbose_name='навзание')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='навзание')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='навзание')),
                ('short_description', models.CharField(max_length=200, verbose_name='Краткое описание')),
                ('short_description_uz', models.CharField(max_length=200, null=True, verbose_name='Краткое описание')),
                ('short_description_ru', models.CharField(max_length=200, null=True, verbose_name='Краткое описание')),
                ('short_description_en', models.CharField(max_length=200, null=True, verbose_name='Краткое описание')),
                ('description', tinymce.models.HTMLField(verbose_name='описание')),
                ('description_uz', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('description_ru', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('description_en', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('image', models.ImageField(upload_to='project/', verbose_name='изображение')),
                ('file', models.FileField(upload_to='project/', validators=[services.utils.validate_file_type_and_size], verbose_name='файл')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Оконченный'), (2, 'В процессе')], default=2, verbose_name='статус')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'проекты',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, verbose_name='Назавние')),
                ('name_uz', models.CharField(max_length=150, null=True, verbose_name='Назавние')),
                ('name_ru', models.CharField(max_length=150, null=True, verbose_name='Назавние')),
                ('name_en', models.CharField(max_length=150, null=True, verbose_name='Назавние')),
                ('static_region', models.PositiveIntegerField(blank=True, choices=[(1, 'Andijon viloyati'), (2, 'Buxoro viloyati'), (3, 'Farg‘ona viloyati'), (4, 'Jizzax viloyati'), (5, 'Qashqadaryo viloyati'), (6, 'Namangan viloyati'), (7, 'Navoiy viloyati'), (8, 'Samarqand viloyati'), (9, 'Sirdaryo viloyati'), (10, 'Surxondaryo viloyati'), (11, 'Toshkent shahar'), (12, 'Toshkent viloyati'), (13, 'Xorazm viloyati'), (14, 'Qoraqalpog‘iston Respublikasi')], null=True, verbose_name='неизменяемый область')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=150, verbose_name='название')),
                ('title_uz', models.CharField(max_length=150, null=True, verbose_name='название')),
                ('title_ru', models.CharField(max_length=150, null=True, verbose_name='название')),
                ('title_en', models.CharField(max_length=150, null=True, verbose_name='название')),
                ('video', models.URLField(verbose_name='видео')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Visitors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=225)),
                ('ip', models.CharField(max_length=225)),
            ],
            options={
                'verbose_name': 'Ip адрес',
                'verbose_name_plural': 'Ip адресы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='category_image/', verbose_name='изображение')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_image', to='services.commissioncategory', verbose_name='категория')),
            ],
            options={
                'verbose_name': 'изображение категории',
                'verbose_name_plural': 'изображение категорий',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CommissionMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100, verbose_name='полное имя')),
                ('full_name_uz', models.CharField(max_length=100, null=True, verbose_name='полное имя')),
                ('full_name_ru', models.CharField(max_length=100, null=True, verbose_name='полное имя')),
                ('full_name_en', models.CharField(max_length=100, null=True, verbose_name='полное имя')),
                ('description', models.CharField(max_length=255, verbose_name='позиция')),
                ('description_uz', models.CharField(max_length=255, null=True, verbose_name='позиция')),
                ('description_ru', models.CharField(max_length=255, null=True, verbose_name='позиция')),
                ('description_en', models.CharField(max_length=255, null=True, verbose_name='позиция')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='порядковый номер')),
                ('image', models.ImageField(upload_to='commission_member/', verbose_name='изображение')),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True, verbose_name='номер телефона')),
                ('facebook', models.URLField(default='facebook.com', verbose_name='фэйсбук_url')),
                ('linkedin', models.URLField(default='linkedin.com', verbose_name='линкедин_url')),
                ('twitter', models.URLField(default='twitter.com', verbose_name='твиттер_url')),
                ('commission_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_categories', to='services.commissioncategory', verbose_name='Категория комиссии')),
                ('mandat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mandat', to='services.mandatcategory', verbose_name='мандат')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.region', verbose_name='регион')),
            ],
            options={
                'verbose_name': 'член комиссии',
                'verbose_name_plural': 'члены комисси',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='заголовок')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='заголовок')),
                ('image', models.ImageField(upload_to='post/', verbose_name='изображение')),
                ('short_description', models.CharField(max_length=200, verbose_name='краткое описание')),
                ('short_description_uz', models.CharField(max_length=200, null=True, verbose_name='краткое описание')),
                ('short_description_ru', models.CharField(max_length=200, null=True, verbose_name='краткое описание')),
                ('short_description_en', models.CharField(max_length=200, null=True, verbose_name='краткое описание')),
                ('description', tinymce.models.HTMLField(verbose_name='описание')),
                ('description_uz', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('description_ru', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('description_en', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('published_date', models.DateField(verbose_name='дата публикации')),
                ('is_published', models.BooleanField(default=True, verbose_name='опубликовано')),
                ('is_banner', models.BooleanField(default=False, verbose_name='это баннер')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.postcategory', verbose_name='категория')),
                ('views', models.ManyToManyField(blank=True, to='services.visitors', verbose_name='количество просмотров')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
                'ordering': ('-created_at',),
            },
        ),
    ]
